<?php

namespace dev_bots_ru\Common\Screen;

use dev_bots_ru\Common\Button;
use dev_bots_ru\Common\Patterns\Singleton;
use dev_bots_ru\Common\Screen\ScreenTrait;

class ScreenHostingCron extends Singleton
{
    use ScreenTrait;

    /**
     * –°–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Cron
     *
     * @param string $account_name
     * @return array|string
     */
    public function manage_cron(string $account_name, bool $return_name = false): array|string
    {
        if (!$account_name && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Cron.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }

    /**
     * –≠–∫—Ä–∞–Ω –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –ø–æ Cron
     *
     * @param string    $account_name
     * @param string    $additional_text
     * @param boolean   $return_name
     * @return array|string
     */
    public function get_help(string $account_name, string $additional_text, bool $return_name = false): array|string
    {
        if (!$account_name && !$additional_text && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω —Å–ø—Ä–∞–≤–∫–∏ –ø–æ Cron.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";
        $text .= "\n\n\n";
        $text .= $additional_text;

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }

    /**
     * –≠–∫—Ä–∞–Ω –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á CronTab
     *
     * @param string    $account_name
     * @param string    $additional_text
     * @param boolean   $return_name
     * @return array|string
     */
    public function get_list(string $account_name, string $additional_text, bool $return_name = false): array|string
    {
        if (!$account_name && !$additional_text && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á Cron.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";
        $text .= "\n\n\n";
        $text .= $additional_text;

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }

    /**
     * –≠–∫—Ä–∞–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
     *
     * @param string    $account
     * @param string    $additional_text
     * @param boolean   $return_name
     * @return array|string
     */
    public function add(string $account_name, string $additional_text, bool $return_name = false): array|string
    {
        if (!$account_name && !$additional_text && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ Cron.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";
        $text .= "\n\n\n";
        $text .= "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –≤–ø–∏—à–∏—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –¥–∞–ª–µ–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∫–æ–º–∞–Ω–¥—É.";
        $text .= "\n\n";
        $text .= "<b>–ü—Ä–∏–º–µ—Ä:</b>";
        $text .= "\n";
        $text .= "<code>* * * * * wget -O /dev/null -t 1 -q https://site.ru/cron.php</code>";
        $text .= "\n\n";
        $text .= "<u>–ó–∞–≥–æ—Ç–æ–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π:</u>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–º–∏–Ω—É—Ç–Ω–æ:\n <code>* * * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ—á–∞—Å–Ω–æ:\n <code>0 * * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 00:00:\n <code>0 0 * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ –ü–ù –≤ 00:00:\n <code>0 0 * * 1</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 3:30 —É—Ç—Ä–∞:\n <code>30 3 * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ –í–° –≤ 8:00 —É—Ç—Ä–∞:\n <code>0 8 * * 0</code>";
        $text .= "\n\n";
        $text .= "üî∏ –í –±—É–¥–Ω–∏ –≤ 9:00 —É—Ç—Ä–∞:\n <code>0 9 * * 1-5</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ—á–∞—Å–Ω–æ –≤ 15 –º–∏–Ω—É—Ç:\n <code>15 * * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–º–µ—Å—è—á–Ω–æ 15-–≥–æ –≤ 6:30 —É—Ç—Ä–∞:\n <code>30 6 15 * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–≥–æ–¥–Ω–æ 1 —è–Ω–≤. –≤ 00:00:\n <code>0 0 1 1 *</code>";
        $text .= "\n\n";
        $text .= "<u>–ó–∞–≥–æ—Ç–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥:</u>";
        $text .= "\n\n";
        $text .= "üî∏ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:\n<code>wget -O /dev/null -t 1 -q https://</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ó–∞–ø—É—Å–∫ PHP-—Å–∫—Ä–∏–ø—Ç–∞ –≤–µ—Ä—Å–∏–∏ 8.2:\n<code>/usr/local/bin/php8.2 ~/</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ó–∞–ø—É—Å–∫ PHP-—Å–∫—Ä–∏–ø—Ç–∞ –≤–µ—Ä—Å–∏–∏ 7.4:\n<code>/usr/local/bin/php7.4 ~/</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ó–∞–ø—É—Å–∫ Perl-—Å–∫—Ä–∏–ø—Ç–∞:\n<code>/usr/bin/perl ~/</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ó–∞–ø—É—Å–∫ Bash-—Å–∫—Ä–∏–ø—Ç–∞:\n<code>/bin/bash ~/</code>";
        $text .= "\n\n";

        $path = preg_replace("#\/home\/[a-z]\/[a-z_\d]{5,20}\/#iu", '', __DIR__);
        $path = str_replace('/Common/Screen', '', $path);
        $path = $path . '/index.php';

        $text .= "‚ùáÔ∏è –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ CP –∫–∞–∂–¥—ã–π —á–∞—Å:\n";
        $text .= "<code>1 * * * * /usr/local/bin/php8.2 ~/" . $path . " cron=true action=avg_load_by_day_chart days=14 account=" . $account_name . "</code>";

        if (strpos(__DIR__, $account_name, 0) !== false) :
            $text .= "\n\n";
            $text .= "‚ùáÔ∏è –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –¥–∏—Å–∫—É –∫–∞–∂–¥—ã–π —á–∞—Å (—Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞):\n";
            $text .= "<code>1 * * * * /usr/local/bin/php8.2 ~/" . $path . " cron=true action=disk_usage account=" . $account_name . "</code>";
        endif;

        $text .= $additional_text;

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }

    /**
     * –≠–∫—Ä–∞–Ω –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
     *
     * @param string    $account
     * @param string    $additional_text
     * @param boolean   $return_name
     * @return array|string
     */
    public function edit(string $account_name, string $additional_text, bool $return_name = false): array|string
    {
        if (!$account_name && !$additional_text && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ Cron.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";
        $text .= "\n\n\n";
        $text .= "–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É –≤–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å (0 - –≤—ã–∫–ª., 1 - –≤–∫–ª.), –¥–∞–ª–µ–µ –ø—Ä–æ–±–µ–ª –∏ ID –∑–∞–¥–∞–Ω–∏—è, ";
        $text .= "–¥–∞–ª–µ–µ –ø—Ä–æ–±–µ–ª –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –¥–∞–ª–µ–µ –ø—Ä–æ–±–µ–ª –∏ –∫–æ–º–∞–Ω–¥—É.";
        $text .= "\n\n";
        $text .= "<b>–ü—Ä–∏–º–µ—Ä:</b>";
        $text .= "\n";
        $text .= "<code>0 2084524 * * * * * wget -O /dev/null -t 1 -q https://site.ru/cron.php</code>";
        $text .= "\n\n";
        $text .= "<u>–ó–∞–≥–æ—Ç–æ–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π:</u>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–º–∏–Ω—É—Ç–Ω–æ:\n <code>* * * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ—á–∞—Å–Ω–æ:\n <code>0 * * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 00:00:\n <code>0 0 * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ –ü–ù –≤ 00:00:\n <code>0 0 * * 1</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 3:30 —É—Ç—Ä–∞:\n <code>30 3 * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ –í–° –≤ 8:00 —É—Ç—Ä–∞:\n <code>0 8 * * 0</code>";
        $text .= "\n\n";
        $text .= "üî∏ –í –±—É–¥–Ω–∏ –≤ 9:00 —É—Ç—Ä–∞:\n <code>0 9 * * 1-5</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ—á–∞—Å–Ω–æ –≤ 15 –º–∏–Ω—É—Ç:\n <code>15 * * * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–º–µ—Å—è—á–Ω–æ 15-–≥–æ –≤ 6:30 —É—Ç—Ä–∞:\n <code>30 6 15 * *</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ï–∂–µ–≥–æ–¥–Ω–æ 1 —è–Ω–≤. –≤ 00:00:\n <code>0 0 1 1 *</code>";
        $text .= "\n\n";
        $text .= "<u>–ó–∞–≥–æ—Ç–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥:</u>";
        $text .= "\n\n";
        $text .= "üî∏ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:\n<code>wget -O /dev/null -t 1 -q https://</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ó–∞–ø—É—Å–∫ PHP-—Å–∫—Ä–∏–ø—Ç–∞ –≤–µ—Ä—Å–∏–∏ 8.2:\n<code>/usr/local/bin/php8.2 ~/</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ó–∞–ø—É—Å–∫ PHP-—Å–∫—Ä–∏–ø—Ç–∞ –≤–µ—Ä—Å–∏–∏ 7.4:\n<code>/usr/local/bin/php7.4 ~/</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ó–∞–ø—É—Å–∫ Perl-—Å–∫—Ä–∏–ø—Ç–∞:\n<code>/usr/bin/perl ~/</code>";
        $text .= "\n\n";
        $text .= "üî∏ –ó–∞–ø—É—Å–∫ Bash-—Å–∫—Ä–∏–ø—Ç–∞:\n<code>/bin/bash ~/</code>";
        $text .= "\n\n";
        $text .= $additional_text;

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }

    /**
     * –≠–∫—Ä–∞–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
     *
     * @param  string       $account_name
     * @param  string       $additional_text
     * @param  boolean      $return_name
     * @return array|string
     */
    public function delete(string $account_name, string $additional_text, bool $return_name = false): array|string
    {
        if (!$account_name && !$additional_text && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ Cron.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";
        $text .= "\n\n\n";
        $text .= "–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ ID. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ ID —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏ –≤—Å–µ –æ–Ω–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.";
        $text .= "\n\n";
        $text .= $additional_text;

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }

    /**
     * –≠–∫—Ä–∞–Ω –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏
     *
     * @param  string       $account_name
     * @param  string       $additional_text
     * @param  boolean      $return_name
     * @return array|string
     */
    public function change_status(string $account_name, string $additional_text, bool $return_name = false): array|string
    {
        if (!$account_name && !$additional_text && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏ Cron.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";
        $text .= "\n\n\n";
        $text .= "–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Ç–∞—Ç—É—Å (0 - –≤—ã–∫–ª., 1 - –≤–∫–ª), –ø—Ä–æ–±–µ–ª –∏ –µ–µ ID.";
        $text .= "\n\n";
        $text .= "–ü—Ä–∏–º–µ—Ä:";
        $text .= "\n";
        $text .= "<code>0 2084524</code>";
        $text .= "\n\n";
        $text .= $additional_text;

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }

    /**
     * –≠–∫—Ä–∞–Ω –∑–∞–ø—Ä–æ—Å–∞ email –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã Cron.
     *
     * @param  string       $account_name
     * @param  string       $additional_text
     * @param  boolean      $return_name
     * @return array|string
     */
    public function get_email(string $account_name, string $additional_text, bool $return_name = false): array|string
    {
        if (!$account_name && !$additional_text && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–Ω–æ–≥–æ email.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";
        $text .= "\n\n\n";
        $text .= $additional_text;

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }

    /**
     * –≠–∫—Ä–∞–Ω —É—Å—Ç–∞–Ω–æ–≤–∫–∏ email –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã Cron.
     *
     * @param  string       $account_name
     * @param  string       $additional_text
     * @param  boolean      $return_name
     * @return array|string
     */
    public function set_email(string $account_name, string $additional_text, bool $return_name = false): array|string
    {
        if (!$account_name && !$additional_text && $return_name) :
            return __FUNCTION__;
        endif;

        $text = "<b>–≠–∫—Ä–∞–Ω —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç—á–µ—Ç–Ω–æ–≥–æ email.</b>";
        $text .= "\n\n";
        $text .= "–¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç: <code>" . $account_name . "</code>";
        $text .= "\n\n\n";
        $text .= "–í–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–ø–æ—á—Ç—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å <u>–æ—à–∏–±–∫–∏</u> –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ Cron-–∑–∞–ø—Ä–æ—Å–æ–≤. ";
        $text .= "–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å <code>0</code>, —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.";
        $text .= "\n\n";
        $text .= $additional_text;

        $buttons = Button::_hosting()->cron()->case__cron_actions($account_name);

        return ScreenTrait::__create_screen($text, $buttons);
    }
}
